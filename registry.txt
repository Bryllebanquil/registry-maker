REGISTRY ITEMS FOUND IN PYTHON FILES
==========================================

FILE: test.py
-------------
Line 9: import winreg
Line 23: try_reg_operation(winreg.HKEY_CURRENT_USER, r"Software\TestApp", "TestValue", "Hello Registry")

FILE: reference.py
------------------
Line 8: import winreg
Line 12: def create_registry_key():
Line 13:     key = winreg.CreateKey(winreg.HKEY_CURRENT_USER, r"Software\MyApp")
Line 14:     winreg.SetValueEx(key, "MyValue", 0, winreg.REG_SZ, "Hello World")
Line 15:     winreg.CloseKey(key)
Line 17: def read_registry_key():
Line 19:         key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r"Software\MyApp")
Line 20:         value, regtype = winreg.QueryValueEx(key, "MyValue")
Line 21:         winreg.CloseKey(key)

FILE: thread_main.py
--------------------
Line 11: import winreg
Line 80: def add_to_startup():
Line 88:     with winreg.OpenKey(winreg.HKEY_CURRENT_USER, key_path, 0, winreg.KEY_WRITE) as key:
Line 89:         winreg.SetValueEx(key, "TestApp", 0, winreg.REG_SZ, f'"{sys.executable}" "{script_path}"')

FILE: makoy.py
--------------
Line 22: import winreg
Line 183: import winreg
Line 225: import winreg
Line 552: import winreg
Line 605: import winreg
Line 638: import winreg
Line 693: import winreg
Line 749: import winreg
Line 791: import winreg
Line 924: import winreg
Line 971: import winreg
Line 1051: import winreg
Line 1190: import winreg
Line 1269: import winreg
Line 1362: import winreg
Line 1442: import winreg
Line 1499: import winreg
Line 1593: import winreg
Line 1698: import winreg
Line 1810: key = winreg.HKEY_CURRENT_USER
Line 1813: with winreg.OpenKey(key, key_path, 0, winreg.KEY_READ | winreg.KEY_WRITE) as reg_key:
Line 1815:                 current_value, _ = winreg.QueryValueEx(reg_key, key_name)
Line 1825:             winreg.SetValueEx(reg_key, key_name, 0, winreg.REG_SZ, run_command)

Registry Key Paths and Operations:
- r"Software\Classes\ms-settings\Shell\Open\command"
- winreg.HKEY_CURRENT_USER
- winreg.HKEY_LOCAL_MACHINE
- Registry Run key operations
- Registry value creation and modification
- UAC bypass registry modifications

FILE: final_agent.py
--------------------
Line 113: import winreg
Line 574: import winreg
Line 616: import winreg
Line 914: import winreg
Line 943: import winreg
Line 985: import winreg
Line 1028: import winreg
Line 1084: import winreg
Line 1140: import winreg
Line 1182: import winreg
Line 1304: import winreg
Line 1361: import winreg
Line 1442: import winreg
Line 1599: import winreg
Line 1694: import winreg
Line 1895: import winreg
Line 2042: import winreg
Line 2158: import winreg
Line 2204: import winreg

Registry Operations:
- UAC bypass methods using registry manipulation
- Windows Defender disable via registry
- Persistence mechanisms using registry
- Startup registry configuration
- Various registry key creation and modification

FILE: agent.py
--------------
Line 28: import winreg
Line 193: import winreg
Line 235: import winreg
Line 562: import winreg
Line 605: import winreg
Line 648: import winreg
Line 703: import winreg
Line 759: import winreg
Line 801: import winreg
Line 924: import winreg
Line 981: import winreg
Line 1061: import winreg
Line 1200: import winreg
Line 1279: import winreg
Line 1603: import winreg
Line 1750: import winreg
Line 1863: key = winreg.HKEY_CURRENT_USER
Line 1866: with winreg.OpenKey(key, key_path, 0, winreg.KEY_READ | winreg.KEY_WRITE) as reg_key:
Line 1869:                 current_value, _ = winreg.QueryValueEx(reg_key, key_name)
Line 1881:             winreg.SetValueEx(reg_key, key_name, 0, winreg.REG_SZ, run_command)

REGISTRY OPERATION PATTERNS IDENTIFIED:
========================================

1. STARTUP PERSISTENCE:
   - HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
   - HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce

2. UAC BYPASS TECHNIQUES:
   - Software\Classes\ms-settings\Shell\Open\command
   - Software\Classes\exefile\shell\open\command
   - Software\Classes\mscfile\shell\open\command
   - Software\Classes\Folder\shell\open\command
   - Software\Microsoft\Windows\CurrentVersion\App Paths\control.exe
   - Software\Classes\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\Shell\open\command

3. WINDOWS DEFENDER DISABLE:
   - SOFTWARE\Policies\Microsoft\Windows Defender
   - SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection
   - SOFTWARE\Policies\Microsoft\Windows Defender\Spynet
   - SOFTWARE\Policies\Microsoft\Windows Advanced Threat Protection

4. COM HIJACKING:
   - Software\Classes\CLSID\{GUID}\InProcServer32
   - Software\Classes\CLSID\{GUID}\Shell\Open\Command

5. ENVIRONMENT VARIABLES:
   - Environment registry key manipulation

6. SYSTEM POLICIES:
   - SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System

REGISTRY VALUE OPERATIONS:
==========================
- winreg.CreateKey()
- winreg.OpenKey()
- winreg.SetValueEx()
- winreg.QueryValueEx()
- winreg.DeleteKey()
- winreg.DeleteValue()
- winreg.CloseKey()

REGISTRY DATA TYPES USED:
=========================
- winreg.REG_SZ (String values)
- winreg.REG_DWORD (DWORD values)
- winreg.REG_EXPAND_SZ (Expandable string values)

REGISTRY HIVES ACCESSED:
========================
- winreg.HKEY_CURRENT_USER
- winreg.HKEY_LOCAL_MACHINE
- winreg.HKEY_CLASSES_ROOT (implicitly through Software\Classes)

SECURITY IMPLICATIONS:
=====================
The registry operations found include:
- Privilege escalation techniques
- Security software bypass methods
- Persistence mechanisms
- System configuration modifications
- UAC bypass implementations

Total registry-related lines found: 100+
Total Python files with registry operations: 6 out of 6